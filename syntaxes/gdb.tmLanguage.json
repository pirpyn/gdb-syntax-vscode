{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "gdb syntax",
	"scopeName": "source.gdb",
	"patterns": [ { "include": "#expression" } ],
	"repository": {
		"expression": {
			"patterns": [
				{ "include": "#server" },
				{ "include": "#command" },
				{ "include": "#block" },
				{ "include": "#data" },
				{ "include": "#comment" },
				{ "include": "#operator" }
			]
		},
		"server": {
			"patterns": [
				{
					"name": "meta.command.server.gdb",
					"begin": "^[ \t]*(server)",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [ { "include": "#command" } ],
					"end": "$"
				}
			]
		},
		"data": {
			"patterns": [
				{ "include": "#convenience" },
				{ "include": "#strings" },
				{ "include": "#numeric" },
				{ "include": "#char" },
				{ "include": "#named_constant" }
			]
		},
		"named_constant": {
			"patterns": [
				{ "include": "#on_off" },
				{ "include": "#unlimited" },
				{ "include": "#auto" }
			]
		},
		"command": {
			"patterns": [
				{
					"name": "meta.command.skip.gdb",
					"begin": "(?:^|\\G)[ \t]*(sk(?:ip?)?)\\b[ \t]*",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"match": "(-rfu(?:nction)?)\\b[ \t]+([^[ \t]]+)",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "string.regexp.gdb" }
							}
						},
						{
							"match": "(-fu(?:nction)?)\\b[ \t]+([^[ \t]]+)",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#location"} ] }
							}
						},
						{
							"match": "(-fi(?:le)?)\\b[ \t]+([^[ \t]]+)",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "markup.underline.link.filename.gdb" }
							}
						},
						{
							"match": "(-gf(?:ile)?)\\b[ \t]+([^[ \t]]+)",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "string.regexp.gdb" }
							}
						},
						{
							"match": "\\b(fu(?:n(?:c(?:t(?:i(?:on?)?)?)?)?)?)\\b(?:[ \t]+([^[ \t]]+))?",
							"captures": {
								"1": { "name": "keyword.control.command.gdb" },
								"2": { "patterns": [ { "include": "#location"} ] }
							}
						},
						{
							"match": "\\b(fi(?:le?)?)\\b(?:[ \t]+([^[ \t]]+))?",
							"captures": {
								"1": { "name": "keyword.control.command.gdb" },
								"2": { "name": "markup.underline.link.filename.gdb" }
							}
						},
						{
							"match": "\\b(de(?:l(?:e(?:te?)?)?)?)\\b[ \t]+(\\d+)[ \t]*",
							"captures": {
								"1": { "name": "keyword.control.command.gdb" },
								"2": { "name": "entity.name.tag.breakpoint.gdb" }
							}
						},
						{
							"begin": "\\b(e(?:n(?:a(?:b(?:le?)?)?)?)?)\\b[ \t]*",
							"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
							"patterns": [
								{
									"match": "\\b(\\d+)",
									"captures": { "1": { "name": "entity.name.tag.breakpoint.gdb" } }
								}
							],
							"end": "$"
						},
						{
							"begin": "\\b(di(?:s(?:a(?:b(?:le?)?)?)?)?)\\b[ \t]*",
							"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
							"patterns": [
								{
									"match": "\\b(\\d+)",
									"captures": { "1": { "name": "entity.name.tag.breakpoint.gdb" } }
								}
							],
							"end": "$"
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.file.gdb",
					"match": "(?:^|\\G)[ \t]*(file?)\\b(?:[ \t]+([^[ \t]]+))?[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "markup.underline.link.filename.gdb" }
					}
				},
				{
					"name": "meta.command.run.gdb",
					"begin": "(?:^|\\G)[ \t]*(r(?:un?)?)\\b[ \t]*",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"match": "\\b([^[ \t]]+)",
							"captures": { "1": { "name": "variable.other.arguments.gdb" } }
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.start.gdb",
					"begin": "(?:^|\\G)[ \t]*(start)\\b[ \t]*",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"match": "\\b([^[ \t]]+)",
							"captures": { "1": { "name": "variable.other.arguments.gdb" } }
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.ignore.gdb",
					"match": "(?:^|\\G)[ \t]*(ig(?:n(?:o(?:re?)?)?)?)\\b[ \t]+(\\d+|\\$\\w+)[ \t]+(\\d+|\\$\\w+)$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "entity.name.tag.breakpoint.gdb" },
						"3": { "name": "constant.numeric.count.gdb" }
					}
				},
				{
					"name": "meta.command.break.gdb",
					"begin": "(?:^|\\G)[ \t]*(t?b(?:r(?:e(?:ak?)?)?)?)\\b",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [ { "include": "#location"} ],
					"end": "(?:([ \t]+-force-condition)?[ \t]+(if)[ \t]+(.+))?[ \t]*$",
					"endCaptures": {
						"1": { "name": "support.function.option.gdb" },
						"2": { "name": "keyword.control.condition.gdb" },
						"3": { "patterns": [ { "include": "#expression" } ] }
					}
				},
				{
					"name": "meta.command.delete.gdb",
					"begin": "(?:^|\\G)[ \t]*(d(?:el(?:e(?:te?)?)?)?)\\b(?:[ \t]+(b(?:r(?:e(?:a(?:k(?:p(?:o(?:i(?:n(?:ts?)?)?)?)?)?)?)?)?)?))?\\b[ \t]*",
					"beginCaptures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "support.function.option.gdb" }
					},
					"patterns": [
						{
							"name": "breakpoints.gdb",
							"match": "\\b(\\d+|\\$\\w+)\\b[ \t]*",
							"captures": { "1": { "name": "entity.name.tag.breakpoint.gdb" } }
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.enable.gdb",
					"begin": "(?:^|\\G)[ \t]*(en(?:a(?:b(?:le?)?)?)?)\\b(?:[ \t]+(b(?:r(?:e(?:a(?:k(?:p(?:o(?:i(?:n(?:ts?)?)?)?)?)?)?)?)?)?))?\\b([ \t]+(?:o(?:n(?:ce?)?)?|c(?:o(?:u(?:nt?)?)?)?[ \t]+\\d+|de(?:l(?:e(?:te?)?)?)?)?)?\\b[ \t]*",
					"beginCaptures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "support.function.option.gdb" },
						"3": { "name": "variable.other.suboption.gdb" }
					},
					"patterns": [
						{
							"name": "breakpoints.gdb",
							"match": "\\b(\\d+|\\$\\w+)\\b[ \t]*",
							"captures": { "1": { "name": "entity.name.tag.breakpoint.gdb" } }
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.disable.gdb",
					"begin": "(?:^|\\G)[ \t]*(dis(?:a(?:b(?:le?)?)?)?)\\b(?:[ \t]+(b(?:r(?:e(?:a(?:k(?:p(?:o(?:i(?:n(?:ts?)?)?)?)?)?)?)?)?)?))?\\b[ \t]*",
					"beginCaptures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "support.function.option.gdb" },
						"3": { "name": "entity.name.tag.breakpoint.gdb" }
					},
					"patterns": [
						{
							"name": "breakpoints.gdb",
							"match": "\\b(\\d+|\\$\\w+)",
							"captures": { "1": { "name": "entity.name.tag.breakpoint.gdb" } }
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.condition.gdb",
					"match": "(?:^|\\G)[ \t]*(cond(?:i(?:t(?:i(?:on?)?)?)?)?)\\b(?:[ \t]+(\\d+|\\$\\w+)\\b(?:[ \t]+(.*))?)?[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "entity.name.tag.breakpoint.gdb" },
						"3": { "patterns": [ { "include": "#expression" } ] }
					}
				},
				{
					"name": "meta.command.continue.gdb",
					"match": "(?:^|\\G)[ \t]*(c(?:o(?:n(?:t(?:i(?:n(?:u(?:e?)?)?)?)?)?)?)?)\\b(?:[ \t]+(\\d+))?[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "constant.numeric.count.ignore.gdb" }
					}
				},
				{
					"name": "meta.command.finish.gdb",
					"match": "(?:^|\\G)[ \t]*(fin(?:i(?:s(?:h?)?)?)?)[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" }
					}
				},
				{
					"name": "meta.command.dont-repeat.gdb",
					"match": "(?:^|\\G)[ \t]*(don(?:t(?:-(?:r(?:e(?:p(?:e(?:a(?:t?)?)?)?)?)?)?)?)?)[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" }
					}
				},
				{
					"name": "meta.command.handle.gdb",
					"begin": "(?:^|\\G)[ \t]*(ha(?:n(?:d(?:le?)?)?)?)\\b[ \t]*",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"match": "\\b(\\$\\w+|\\d+(?:-\\d+)*|all|SIG[A-Z]+)",
							"captures": { "1": { "name": "support.class.signals.gdb" } }
						},
						{
							"match": "\\b((?:no)?(?:s(?:t(?:op?)?)?|pr(?:i(?:nt?)?)?|pas*|i(?:g(?:n(?:o(?:re?)?)?)?)?))\\b",
							"captures": { "1": { "name": "support.function.handle.keyword.gdb" } }
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.next.gdb",
					"match": "(?:^|\\G)[ \t]*(n(?:exti?)?)\\b[ \t]*(?:(\\d+)?)[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "constant.numeric.count.repeat.gdb" }
					}
				},
				{
					"name": "meta.command.step.gdb",
					"match": "(?:^|\\G)[ \t]*(s(?:tepi?)?)\\b[ \t]*(?:(\\d+)?)[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "constant.numeric.count.repeat.gdb" }
					}
				},
				{
					"name": "meta.command.until.gdb",
					"match": "(?:^|\\G)[ \t]*(u(?:nt(?:il?)?)?)\\b(?:[ \t]+([^ \t]+))?[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "patterns": [ { "include": "#location"} ] }
					}
				},
				{
					"name": "meta.command.jump.gdb",
					"match": "(?:^|\\G)[ \t]*(j(?:u(?:mp?)?)?)\\b[ \t]+(\\d+|0x\\h+)[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "patterns": [ { "include": "#numeric"} ] }
					}
				},
				{
					"name": "meta.command.directory.gdb",
					"begin": "(?:^|\\G)[ \t]*(dir(?:e(?:c(?:t(?:o(?:ry?)?)?)?)?)?)\\b[ \t]*",
					"beginCaptures": {
						"1": { "name": "keyword.control.command.gdb" }
					},
					"patterns": [
						{
							"match": "\\b([^:]+)",
							"captures": { "1": { "name": "markup.underline.link.directory.gdb" } }
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.set.gdb",
					"begin": "(?:^|\\G)[ \t]*(set)\\b[ \t]*",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns":[
						{
							"name": "meta.command.set.breakpoints.gdb",
							"begin": "\\b(b(?:r(?:e(?:a(?:k(?:p(?:o(?:i(?:n(?:ts?)?)?)?)?)?)?)?)?)?)\\b[ \t]*",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns": [
								{
									"name": "meta.command.set.breakpoint.pending.gdb",
									"match": "\\b(p(?:e(?:n(?:d(?:i(?:ng?)?)?)?)?)?)\\b[ \t]*(on|off?|[auto]+)?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#on_off"}, { "include": "#auto"} ] }
									}
								}
							],
							"end": "$"
						},
						{
							"name": "meta.command.set.args.gdb",
							"begin": "\\b(args?)\\b[ \t]*",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns": [
								{
									"match": "\\b(.*)",
									"captures": { "1": { "name": "variable.other.variable.gdb" } }
								}
							],
							"end": "$"
						},
						{
							"name": "meta.command.set.history.gdb",
							"begin": "\\b(hi(?:s(?:t(?:o(?:ry?)?)?)?)?)\\b[ \t]*",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns": [
								{
									"name": "meta.command.set.history.save.gdb",
									"match": "\\b(sa(?:ve?)?)\\b[ \t]*(?:[ \t]+(on|off?))?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#on_off" } ] }
									}
								},
								{
									"name": "meta.command.set.history.size.gdb",
									"match": "\\b(si(?:ze?)?)\\b[ \t]+([unlimited]+|\\d+)[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#unlimited" }, { "include": "#numeric" } ] }
									}
								},
								{
									"name": "meta.command.set.history.filename.gdb",
									"match": "\\b(f(?:i(?:l(?:e(?:n(?:a(?:me?)?)?)?)?)?)?)\\b[ \t]+(.*)[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "name": "markup.underline.link.filename.gdb" }
									}
								},
								{
									"name": "meta.command.set.history.remove-duplicates.gdb",
									"match": "\\b(r(?:e(?:m(?:o(?:v(?:e(?:-(?:d(?:u(?:p(?:l(?:i(?:c(?:a(?:t(?:es?)?)?)?)?)?)?)?)?)?)?)?)?)?)?)?)[ \t]+([unlimited]+|\\d+)[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#unlimited" }, { "include": "#numeric" } ] }
									}
								}
							],
							"end": "$"
						},
						{
							"name": "meta.command.set.substitute-path.gdb",
							"match": "\\b(su(?:b(?:s(?:t(?:i(?:t(?:u(?:t(?:e(?:-(?:p(?:a(?:th?)?)?)?)?)?)?)?)?)?)?)?)?)[ \t]+([^[ \t]]+)[ \t]+(.*)[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "markup.underline.link.directory.gdb" },
								"3": { "name": "markup.underline.link.directory.gdb" }
							}
						},
						{
							"name": "meta.command.set.auto-load.gdb",
							"begin": "\\b(auto-load)\\b[ \t]+",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns":[
								{
									"match": "\\b(no?)\\b[ \t]*$",
									"captures": { "1": { "name": "markup.bold.argument.gdb" } }
								},
								{
									"name": "meta.command.set.auto-load.safe-path.gdb",
									"begin": "\\b(sa(?:f(?:e(?:-(?:p(?:a(?:th?)?)?)?)?)?)?)[ \t]*",
									"beginCaptures": { "1": { "name": "variable.other.suboption.gdb" } },
									"patterns":[
										{
											"match": "\\b([^:]+)",
											"captures": { "1": { "name": "markup.underline.link.directory.gdb" } }
										}
									],
									"end": "$"
								},
								{
									"name": "meta.command.set.auto-load.local-gdbinit.gdb",
									"match": "\\b(lo(?:c(?:a(?:l(?:-(?:g(?:d(?:b(?:i(?:n(?:it?)?)?)?)?)?)?)?)?)?)?)(?:[ \t]+(on|off?))?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#on_off" } ] }
									}
								},
								{
									"name": "meta.command.set.auto-load.python-scripts.gdb",
									"match": "\\b(p(?:y(?:t(?:h(?:o(?:n(?:-(?:s(?:c(?:r(?:i(?:p(?:ts?)?)?)?)?)?)?)?)?)?)?)?)?)(?:[ \t]+(on|off?))?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#on_off" } ] }
									}
								}
							],
							"end": "$"
						},
						{
							"name": "meta.command.set.logging.gdb",
							"begin": "\\b(lo(?:g(?:g(?:i(?:ng?)?)?)?)?)\\b",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns":[
								{
									"match": "\\b(f(?:i(?:le?)?)?)\\b(?:[ \t]+(.+))?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "name": "markup.underline.link.filename.gdb" }
									}
								},
								{
									"match": "\\b(ov(?:e(?:r(?:w(?:r(?:i(?:te?)?)?)?)?)?)?)\\b(?:[ \t]+(on|off?))?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#on_off" } ] }
									}
								},
								{
									"match": "\\b(r(?:e(?:d(?:i(?:r(?:e(?:ct?)?)?)?)?)?)?)\\b(?:[ \t]+(on|off?))?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#on_off" } ] }
									}
								},
								{
									"match": "\\b(on|off?)\\b(?:[ \t]+([^ \t]+))?$",
									"captures": {
										"1": { "patterns": [ { "include": "#on_off" } ] },
										"2": { "name": "markup.underline.link" }
									}
								},
								{ "include": "#on_off" }
							],
							"end": "$"
						},
						{
							"name": "meta.command.set.pagination.gdb",
							"match": "\\b(pa(?:g(?:i(?:n(?:a(?:t(?:i(?:on?)?)?)?)?)?)?)?)\\b(?:[ \t]+(on|off?))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#on_off" } ] }
							}
						},
						{
							"name": "meta.command.set.variable.gdb",
							"begin": "\\b(var(?:i(?:a(?:b(?:le?)?)?)?)?)\\b[ \t]+",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns": [
								{
									"match": "\\b([^ \t=]+)[ \t]*=",
									"captures": { "1": { "name": "variable.other.variable.gdb" } }
								},
								{ "include": "#expression" }
							],
							"end": "$"
						},
						{
							"name": "meta.commant.set.demangle-style.gdb",
							"match": "\\b(d(?:e(?:m(?:a(?:n(?:g(?:l(?:e(?:-(?:s(?:t(?:y(?:le?)?)?)?)?)?)?)?)?)?)?)?)?)[ \t]+\\b(n(?:o(?:ne?)?)?|a(?:u(?:to?)?)?|j(?:a(?:va?)?)?|d(?:l(?:a(?:ng?)?)?)?|r(?:u(?:st?)?)?|gnat?|gnu(?:-(?:v3?)?)?)\\b[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "markup.bold.argument.gdb" }
							}
						},
						{
							"name": "meta.commant.set.follow-fork-mode.gdb",
							"match": "\\b(follow-f(?:o(?:r(?:k(?:-(?:m(?:o(?:de?)?)?)?)?)?)?)?)[ \t]+\\b(c(?:h(?:i(?:ld?)?)?)?|p(?:a(?:r(?:e(?:nt?)?)?)?)?)\\b[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "markup.bold.argument.gdb" }
							}
						},
						{
							"name": "meta.commant.set.detach-on-fork.gdb",
							"match": "(det(?:a(?:c(?:h(?:-(?:o(?:n(?:-(?:f(?:o(?:rk?)?)?)?)?)?)?)?)?)?)?)(?:[ \t]+(on|off?))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#on_off" } ] }
							}
						},
						{
							"name": "meta.commant.set.print.gdb",
							"begin": "\\b(p(?:r(?:i(?:nt?)?)?)?)\\b[ \t]+",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns": [
								{
									"name": "meta.commant.set.print.pretty.gdb",
									"match": "\\b(pr(?:e(?:t(?:ty?)?)?)?)\\b(?:[ \t]+(on|off?))?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#on_off" } ] }
									}
								},
								{
									"name": "meta.commant.set.print.vtbl.gdb",
									"match": "\\b(v(?:t(?:bl?)?)?)\\b(?:[ \t]+(on|off?))?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#on_off" } ] }
									}
								},
								{
									"name": "meta.commant.set.print.object.gdb",
									"match": "\\b(o(?:b(?:j(?:e(?:ct?)?)?)?)?)\\b(?:[ \t]+(on|off?))?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#on_off" } ] }
									}
								},
								{
									"name": "meta.commant.set.print.static-members.gdb",
									"match": "\\b(st(?:a(?:t(?:i(?:c(?:-(?:m(?:e(?:m(?:b(?:e(?:rs?)?)?)?)?)?)?)?)?)?)?)?)(?:[ \t]+(on|off?))?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#on_off" } ] }
									}
								},
								{
									"name": "meta.commant.set.print.sevenbit-strings.gdb",
									"match": "\\b(se(?:v(?:e(?:n(?:b(?:i(?:t(?:-(?:s(?:t(?:r(?:i(?:n(?:gs?)?)?)?)?)?)?)?)?)?)?)?)?)?)(?:[ \t]+(on|off?))?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#on_off" } ] }
									}
								},
								{
									"name": "meta.commant.set.print.demangle.gdb",
									"match": "\\b(d(?:e(?:m(?:a(?:n(?:g(?:le?)?)?)?)?)?)?)(?:[ \t]+(on|off?))?[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#on_off" } ] }
									}
								},
								{
									"name": "meta.command.set.print.elements.gdb",
									"match": "\\b(el(?:e(?:m(?:e(?:n(?:ts?)?)?)?)?)?)\\b[ \t]+([unlimited]+|\\d+)[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#unlimited" }, { "include": "#numeric" } ] }
									}
								},
								{
									"name": "meta.command.set.print.repeats.gdb",
									"match": "\\b(re(?:p(?:e(?:a(?:ts?)?)?)?)?)\\b[ \t]+([unlimited]+|\\d+)[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "patterns": [ { "include": "#unlimited" }, { "include": "#numeric" } ] }
									}
								},
								{
									"name": "meta.command.set.print.frame-arguments.gdb",
									"match": "\\b(frame-a(?:r(?:g(?:u(?:m(?:e(?:n(?:ts?)?)?)?)?)?)?)?)\\b[ \t]+(a(?:ll?)?|s(?:c(?:a(?:l(?:a(?:rs?)?)?)?)?)?|n(?:o(?:ne?)?)?|p(?:r(?:e(?:s(?:e(?:n(?:ce?)?)?)?)?)?)?)[ \t]*$",
									"captures": {
										"1": { "name": "variable.other.suboption.gdb" },
										"2": { "name": "markup.bold.argument.gdb" }
									}
								}
							],
							"end": "$"
						},
						{
							"name": "meta.command.set.confirms.gdb",
							"match": "\\b(con(?:f(?:i(?:rm?)?)?)?)\\b(?:[ \t]+(on|off?))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#on_off" } ] }
							}
						},
						{
							"name": "meta.command.set.verbose.gdb",
							"match": "\\b(ve(?:r(?:b(?:o(?:se?)?)?)?)?)\\b(?:[ \t]+(on|off?))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#on_off" } ] }
							}
						},
						{
							"name": "meta.command.set.input-radix.gdb",
							"match": "\\b(inp(?:u(?:t(?:-(?:r(?:a(?:d(?:ix?)?)?)?)?)?)?)?)(?:[ \t]+(\\d+))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#numeric" } ] }
							}
						},
						{
							"name": "meta.command.set.output-radix.gdb",
							"match": "\\b(out(?:p(?:u(?:t(?:-(?:r(?:a(?:d(?:ix?)?)?)?)?)?)?)?)?)(?:[ \t]+(\\d+))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#numeric" } ] }
							}
						},
						{
							"name": "meta.command.set.height.gdb",
							"match": "\\b(he(?:i(?:g(?:ht?)?)?)?)\\b(?:[ \t]+(\\d+|[unlimited]+))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#numeric" }, { "include": "#unlimited" } ] }
							}
						},
						{
							"name": "meta.command.set.width.gdb",
							"match": "\\b(wi(?:d(?:th?)?)?)\\b(?:[ \t]+(\\d+|[unlimited]+))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#numeric" }, { "include": "#unlimited" } ] }
							}
						},
						{
							"name": "meta.command.set.listsize.gdb",
							"match": "\\b(lis(?:t(?:s(?:i(?:ze?)?)?)?)?)\\b(?:[ \t]+(\\d+|[unlimited]+))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#numeric" }, { "include": "#unlimited" } ] }
							}
						},
						{
							"name": "meta.command.set.style.gdb",
							"begin": "\\b(sty(?:le?)?)\\b",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns": [
								{
									"name": "meta.command.set.style.enabled.gdb",
									"match": "\\b(e(?:n(?:a(?:b(?:l(?:ed?)?)?)?)?)?)\\b",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.set.style.sources.gdb",
									"match": "\\b(s(?:o(?:u(?:r(?:c(?:es?)?)?)?)?)?)\\b",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.set.style.filename.gdb",
									"match": "\\b(fi(?:l(?:e(?:n(?:a(?:me?)?)?)?)?)?)\\b",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.set.style.function.gdb",
									"match": "\\b(fu(?:n(?:c(?:t(?:i(?:on?)?)?)?)?)?)\\b",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.set.style.variable.gdb",
									"match": "\\b(v(?:a(?:r(?:i(?:a(?:b(?:le?)?)?)?)?)?)?)\\b",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.set.style.address.gdb",
									"match": "\\b(a(?:d(?:d(?:r(?:e(?:ss?)?)?)?)?)?)\\b",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.set.style.title.gdb",
									"match": "\\b(ti(?:t(?:le?)?)?)\\b",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.set.style.highlight.gdb",
									"match": "\\b(h(?:i(?:g(?:h(?:l(?:i(?:g(?:ht?)?)?)?)?)?)?)?)\\b",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.set.style.metadata.gdb",
									"match": "\\b(m(?:e(?:t(?:a(?:d(?:a(?:ta?)?)?)?)?)?)?)\\b",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.set.style.metadata.gdb",
									"match": "\\b(m(?:e(?:t(?:a(?:d(?:a(?:ta?)?)?)?)?)?)?)\\b",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.set.style.tui-border.gdb",
									"match": "\\b(tui-b(?:o(?:r(?:d(?:er?)?)?)?)?)\\b",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.set.style.tui-active-border.gdb",
									"match": "\\b(tui-a(?:c(?:t(?:i(?:v(?:e(?:-(?:b(?:o(?:r(?:d(?:er?)?)?)?)?)?)?)?)?)?)?)?)\\b",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{ "include": "#on_off" },
								{ "include": "#color_spec" }
							],
							"end": "$"
						},
						{
							"name": "meta.command.set.disable-randomization.gdb",
							"begin": "\\b(disab(?:l(?:e(?:-(?:r(?:a(?:n(?:d(?:o(?:m(?:i(?:z(?:a(?:t(?:i(?:on?)?)?)?)?)?)?)?)?)?)?)?)?)?)?)?)\\b",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns": [
								{ "include": "#on_off" }
							],
							"end": "$"
						},
						{
							"name": "meta.command.set.disassemble-next-line.gdb",
							"begin": "\\b(disassemble-(?:n(?:e(?:x(?:t(?:-(?:l(?:i(?:ne?)?)?)?)?)?)?)?)?)\\b",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns": [
								{ "include": "#on_off" },
								{ "include": "#auto" }
							],
							"end": "$"
						},
						{
							"name": "meta.command.set.disassembly-flavor.gdb",
							"match": "\\b(disassembly(?:-(?:f(?:l(?:a(?:v(?:or?)?)?)?)?)?)?)[ \t]+(at{0,2}|i(?:n(?:t(?:el?)?)?)?)[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "variable.other.suboption.gdb" }
							}
						},
						{ "include": "#expression" }
					],
					"end": "$"
				},
				{
					"name": "meta.command.show.gdb",
					"begin": "(?:^|\\G)[ \t]*(show?)\\b[ \t]*",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"name": "meta.command.show.breakpoints.gdb",
							"begin": "\\b(b(?:r(?:e(?:a(?:k(?:p(?:o(?:i(?:n(?:ts?)?)?)?)?)?)?)?)?)?)\\b[ \t]*",
							"beginCaptures": {
								"1": { "name": "support.function.option.gdb" }
							},
							"patterns": [
								{
									"name": "meta.command.show.breakpoint.pending.gdb",
									"match": "\\b(p(?:e(?:n(?:d(?:i(?:ng?)?)?)?)?)?)\\b[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								}
							],
							"end": "$"
						},
						{
							"name": "meta.command.show.args.gdb",
							"match": "\\b(args?)\\b[ \t]*$",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"name": "meta.command.show.history.gdb",
							"begin": "\\b(hi(?:s(?:t(?:o(?:ry?)?)?)?)?)\\b[ \t]*",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns": [
								{
									"name": "meta.command.show.history.save.gdb",
									"match": "\\b(sa(?:ve?)?)\\b[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.show.history.size.gdb",
									"match": "\\b(si(?:ze?)?)\\b[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.show.history.filename.gdb",
									"match": "\\b(f(?:i(?:l(?:e(?:n(?:a(?:me?)?)?)?)?)?)?)\\b[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.show.history.remove-duplicates.gdb",
									"match": "\\b(r(?:e(?:m(?:o(?:v(?:e(?:-(?:d(?:u(?:p(?:l(?:i(?:c(?:a(?:t(?:es?)?)?)?)?)?)?)?)?)?)?)?)?)?)?)?)[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								}
							],
							"end": "$"
						},
						{
							"name": "meta.command.show.substitute-path.gdb",
							"match": "\\b(su(?:b(?:s(?:t(?:i(?:t(?:u(?:t(?:e(?:-(?:p(?:a(?:th?)?)?)?)?)?)?)?)?)?)?)?)?)[ \t]*$",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"name": "meta.command.show.auto-load.gdb",
							"begin": "\\b(auto-load)\\b[ \t]+",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns":[
								{
									"name": "meta.command.show.auto-load.safe-path.gdb",
									"match": "\\b(sa(?:f(?:e(?:-(?:p(?:a(?:th?)?)?)?)?)?)?)[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.show.auto-load.local-gdbinit.gdb",
									"match": "\\b(lo(?:c(?:a(?:l(?:-(?:g(?:d(?:b(?:i(?:n(?:it?)?)?)?)?)?)?)?)?)?)?)[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.show.auto-load.python-scripts.gdb",
									"match": "\\b(p(?:y(?:t(?:h(?:o(?:n(?:-(?:s(?:c(?:r(?:i(?:p(?:ts?)?)?)?)?)?)?)?)?)?)?)?)?)[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								}
							],
							"end": "$"
						},
						{
							"name": "meta.command.show.logging.gdb",
							"begin": "\\b(lo(?:g(?:g(?:i(?:ng?)?)?)?)?)\\b[ \t]*",
							"beginCaptures": { "1": { "name": "support.function.option.gdb" } },
							"patterns":[
								{
									"match": "\\b(f(?:i(?:le?)?)?)[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"match": "\\b(ov(?:e(?:r(?:w(?:r(?:i(?:te?)?)?)?)?)?)?)\\b[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"match": "\\b(r(?:e(?:d(?:i(?:r(?:e(?:ct?)?)?)?)?)?)?)\\b[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								}
							],
							"end": "$"
						},
						{
							"name": "meta.command.show.pagination.gdb",
							"match": "\\b(pa(?:g(?:i(?:n(?:a(?:t(?:i(?:on?)?)?)?)?)?)?)?)\\b[ \t]*$",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"name": "meta.commant.show.print.gdb",
							"begin": "\\b(p(?:r(?:i(?:nt?)?)?)?)\\b[ \t]*",
							"beginCaptures": {
								"1": { "name": "support.function.option.gdb" }
							},
							"patterns": [
								{
									"name": "meta.commant.show.print.pretty.gdb",
									"match": "\\b(pr(?:e(?:t(?:ty?)?)?)?)\\b[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.commant.show.print.vtbl.gdb",
									"match": "\\b(v(?:t(?:bl?)?)?)\\b[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.show.print.elements.gdb",
									"match": "\\b(el(?:e(?:m(?:e(?:n(?:ts?)?)?)?)?)?)\\b[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.show.print.repeats.gdb",
									"match": "\\b(re(?:p(?:e(?:a(?:ts?)?)?)?)?)\\b[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								},
								{
									"name": "meta.command.show.print.frame-arguments.gdb",
									"match": "\\b(frame-a(?:r(?:g(?:u(?:m(?:e(?:n(?:ts?)?)?)?)?)?)?)?)\\b[ \t]*$",
									"captures": { "1": { "name": "variable.other.suboption.gdb" } }
								}
							],
							"end": "$"
						},
						{ "include": "#expression" }
					],
					"end": "$"
				},
				{
					"name": "meta.command.watch.gdb",
					"begin": "(?:^|\\G)[ \t]*((?:a|r)?wa(?:t(?:ch?)?)?)\\b[ \t]+(-l(?:ocation)?[ \t]+)?(?:(\\w+)|\\*[ \t]*\\([^)]+[ \t]*\\*\\)[ \t]*(0x\\h+)[ \t]*\\)|(\\$\\w+))",
					"beginCaptures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "support.function.option.gdb" },
						"3": { "name": "variable.other.watch-expression.gdb" },
						"4": { "name": "variable.other.watch-adress.gdb" },
						"5": { "name": "entity.name.tag.watch-convenience.gdb" }
					},
					"patterns": [
						{
							"match": "\\b(thread)[ \t]+(\\d+)",
							"captures": {
								"1": { "name": "support.function.suboption.gdb" },
								"2": { "name": "constant.numeric.base10.thread_id.gdb" }
							}
						},
						{
							"match": "\\b(mask)[ \t]+(0x\\h+)",
							"captures": {
								"1": { "name": "support.function.suboption.gdb" },
								"2": { "name": "constant.character.escape.mask_value.gdb" }
							}
						},
						{
							"match": "\\b(task)[ \t]+(\\d+)",
							"captures": {
								"1": { "name": "support.function.suboption.gdb" },
								"2": { "name": "constant.numeric.base10.task_id.gdb" }
							}
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.source.gdb",
					"begin": "(?:^|\\G)[ \t]*(so(?:u(?:r(?:ce?)?)?)?)\\b[ \t]+",
					"beginCaptures": {
						"1": { "name": "keyword.control.command.gdb" }
					},
					"patterns": [
						{
							"match": "\\b(-v|-s)\\b",
							"captures": {
								"1": { "name": "support.function.option.gdb" }
							}
						},
						{
							"match": "\\b([^ \t]+)[^ \t]*$",
							"captures": { "1": { "name": "markup.underline.link.filename.gdb" } }
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.printf.gdb",
					"match": "(?:^|\\G)[ \t]*(printf)\\b",
					"captures": { "1": { "name": "keyword.control.command.gdb" } }
				},
				{
					"name": "meta.command.print.gdb",
					"match": "(?:^|\\G)[ \t]*(p(?:rint)?)\\b[ \t]*((?:-.*[ \t]+)+--)?([ \t]*\\/[xdutacfszr])?[ \t]+",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "support.function.print.option.gdb" },
						"3": { "name": "constant.character.escape.format.gdb" }
					}
				},
				{
					"name": "meta.command.call.gdb",
					"match": "(?:^|\\G)[ \t]*(call?)\\b[ \t]*((?:-.*[ \t]+)+--)?([ \t]*\\/[xdutacfszr])?[ \t]+",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "support.function.call.option.gdb" },
						"3": { "name": "constant.character.escape.format.gdb" }
					}
				},
				{
					"name": "meta.command.echo.gdb",
					"match": "(?:^|\\G)[ \t]*(ec(?:ho?)?)\\b[ \t]*(.*)[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "string.quoted.double" }
					}
				},
				{
					"name": "meta.command.python.gdb",
					"begin": "(?:^|\\G)[ \t]*(py(?:thon)?)(?!-)\\b[ \t]+(?:.+)[ \t]*",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"end": "[ \t]*$",
					"patterns": [ { "include": "source.python" } ]
				},
				{
					"name": "meta.command.python-interactive.gdb",
					"begin": "(?:^|\\G)[ \t]*(pi|python-interactive)\\b[ \t]*",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"end": "[ \t]*$",
					"patterns": [ { "include": "source.python" } ]
				},
				{
					"name": "meta.command.examine.gdb",
					"match": "(?:^|\\G)[ \t]*(x)\\b[ \t]*(/(?:-?\\d+)?(?:(?:[xduotacfsim])?(?:[bhwg])?|(?:[bhwg])?(?:[xduotacfsim])?))?\\b[ \t]*(0x\\h+)?[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "support.function.option.gdb" },
						"3": { "name": "constant.character.escape.gdb" }
					}
				},
				{
					"name": "meta.command.symbol-file.gdb",
					"match": "(?:^|\\G)[ \t]*(sy(?:m(?:b(?:o(?:l(?:-(?:f(?:i(?:le?)?)?)?)?)?)?)?)?)(?:[ \t]+(-read(?:now|never)))?(?:[ \t]+([^ \t]+)(?:[ \t]+(-o)[ \t]+(0x\\h+))?)?[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "support.function.option.gdb" },
						"3": { "name": "markup.underline.link.filename.gdb" },
						"4": { "name": "support.function.option.gdb" },
						"5": { "name": "constant.character.escape.gdb" }
					}
				},
				{
					"name": "meta.command.exec-file.gdb",
					"match": "(?:^|\\G)[ \t]*(exe(?:c(?:-(?:f(?:i(?:le?)?)?)?)?)?)(?:[ \t]+([^ \t]+))?[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "markup.underline.link.filename.gdb" }
					}
				},
				{
					"name": "meta.command.add-symbol-file.gdb",
					"match": "(?:^|\\G)[ \t]*(add-symbol-file)\\b[ \t]+([^ \t]+)(?:[ \t]+(-read(?:now|never)))?(?:[ \t]+(-o)[ \t]+(0x\\h+))?(?:[ \t]+(0x\\h+))?(?:[ \t]+(-s)[ \t]+(\\.[^\t]+)[ \t+](0x\\h+))?[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "markup.underline.link.filename.gdb" },
						"3": { "name": "support.function.option.gdb" },
						"4": { "name": "support.function.option.gdb" },
						"5": { "name": "constant.character.escape.offset.gdb" },
						"6": { "name": "constant.character.escape.textadress.gdb" },
						"7": { "name": "support.function.option.gdb" },
						"8": { "name": "variable.other.section.gdb" },
						"9": { "name": "constant.character.escape.adress.gdb" }
					}
				},
				{
					"name": "meta.command.inferior.gdb",
					"match": "(?:^|\\G)[ \t]*(infe(?:r(?:i(?:or?)?)?)?)\\b(?:[ \t]+(\\d+))?[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "variable.other.gdb" }
					}
				},
				{
					"name": "meta.command.add-inferior.gdb",
					"begin": "(?:^|\\G)[ \t]*(add-i(?:n(?:f(?:e(?:r(?:i(?:or?)?)?)?)?)?)?)\\b",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"match": "(-copies)\\b[ \t]+(\\d+)",
							"captures": {
								"1": { "name": "support.function.copies.gdb" },
								"2": { "name": "variable.other.gdb" }
							}
						},
						{
							"match": "(-exec)\\b[ \t]+(\\w+)",
							"captures": {
								"1": { "name": "support.function.copies.gdb" },
								"2": { "name": "markup.underline.link.gdb" }
							}
						},
						{
							"match": "(-no-connection)\\b",
							"captures": { "1": { "name": "support.function.copies.gdb" } }
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.target.gdb",
					"begin": "(?:^|\\G)[ \t]*(tar(?:g(?:et?)?)?)\\b[ \t]+",
					"beginCaptures": { "1" : {  "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"match": "\\b(co(?:re?)?)[ \r]+([^\t]+)[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "markup.underline.link.corefile.gdb" }
							}
						},
						{
							"match": "\\b(exec?)[ \r]+([^\t]+)[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "markup.underline.link.execfile.gdb" }
							}
						},
						{
							"match": "\\b(rem(?:o(?:te?)?)?)[ \r]+([^\t]+)[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "support.class.medium.gdb" }
							}
						},
						{
							"match": "\\b(ext(?:e(?:n(?:d(?:e(?:d(?:-(?:r(?:e(?:m(?:o(?:te?)?)?)?)?)?)?)?)?)?)?)?)[ \r]+([^\t]+)[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "support.class.medium.gdb" }
							}
						},
						{
							"match": "\\b(record-f(?:u(?:ll?)?)?)[ \t]*$",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"match": "\\b(record-b(?:t(?:r(?:a(?:ce?)?)?)?)?)[ \t]+(bts|pt)[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "variable.other.arg.gdb" }
							}
						},
						{
							"match": "\\b(n(?:a(?:t(?:i(?:ve?)?)?)?)?)\\b[ \t]*$",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.ptype.gdb",
					"match": "(?:^|\\G)[ \t]*(pt(?:y(?:pe?)?)?)\\b[ \t]*(/[rmMtToxd]+)?\\b[ \t]*([^ \t]+)$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "support.function.option.gdb" },
						"3": { "name": "support.variable.gdb" }
					}
				},
				{
					"name": "meta.command.whatis.gdb",
					"match": "(?:^|\\G)[ \t]*(wha(?:t(?:is?)?)?)\\b[ \t]*(/[rmMtToxd]+)?\\b[ \t]+([^ \t]+)$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "support.function.option.gdb" },
						"3": { "name": "support.variable.gdb" }
					}
				},
				{
					"name": "meta.command.backtrace.gdb",
					"begin": "(?:^|\\G)[ \t]*\\b(bt|ba(?:c(?:k(?:t(?:r(?:a(?:ce?)?)?)?)?)?)?|whe(?:re?)?|i(?:nfo?)?[ \t]+s(?:tack?)?)\\b",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"match": "(-[^ \t]+)\\b",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"match": "\\b(f(?:u(?:ll?)?)?|n(?:o(?:-(?:f(?:i(?:l(?:t(?:e(?:rs?)?)?)?)?)?)?)?)?|h(?:i(?:de?)?)?)\\b",
							"captures": { "1": { "name": "support.function.qualifier.gdb" } }
						},
						{
							"include": "#numeric"
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.info.gdb",
					"begin": "(?:^|\\G)[ \t]*(i(?:n(?:fo?)?)?)\\b[ \t]+",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"match": "\\b(lo(?:c(?:a(?:ls?)?)?)?)\\b[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" }
							}
						},
						{
							"match": "\\b(sc(?:o(?:pe?)?)?)\\b[ \t]+([^ \t]+)$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#location"} ] }
							}
						},
						{
							"match": "\\b(sy(?:m(?:b(?:ol?)?)?)?)\\b[ \t]+([^ \t]+)$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "constant.character.escape.adress.gdb" }
							}
						},
						{
							"match": "\\b(ad(?:d(?:r(?:e(?:ss?)?)?)?)?)\\b[ \t]+([^ \t]+)$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "support.variable.symbol.gdb" }
							}
						},
						{
							"match": "\\b(types)\\b[ \t]+(?:(-q)[ \t]+)?([^ \t]+)$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "variable.other.arg.gdb" },
								"3": { "name": "string.regexp.gdb" }
							}
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.catch.gdb",
					"begin": "(?:^|\\G)[ \t]*(t?cat(?:ch?)?)\\b[ \t]+",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"match": "\\b(t(?:h(?:r(?:ow?)?)?)?)\\b(?:[ \t]+([^ \t]+))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "string.regexp.gdb" }
							}
						},
						{
							"match": "\\b(exc(?:e(?:p(?:t(?:i(?:on?)?)?)?)?)?)\\b(?:[ \t]+([^ \t]+))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "support.class.exception.gdb" }
							}
						},
						{
							"match": "\\b(h(?:a(?:n(?:d(?:l(?:e(?:rs?)?)?)?)?)?)?)\\b(?:[ \t]+([^ \t]+))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "support.class.exception.gdb" }
							}
						},
						{
							"match": "\\b(a(?:s(?:s(?:e(?:rt?)?)?)?)?)[ \t]*$",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"match": "\\b(exec?)[ \t]*$",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"match": "\\b(sy(?:s(?:c(?:a(?:ll?)?)?)?)?)\\b(?:[ \t]+(.+))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "support.class.os-syscall.gdb" }
							}
						},
						{
							"match": "\\b(v(?:f(?:o(?:rk?)?)?)?|f(?:o(?:rk?)?)?)[ \t]*$",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"match": "\\b(u(?:n(?:l(?:o(?:ad?)?)?)?)?|l(?:o(?:ad?)?)?)\\b(?:[ \t]+([^\t]+))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "string.regexp.gdb" }
							}
						},
						{
							"match": "\\b(si(?:g(?:n(?:al?)?)?)?)\\b(?:[ \t]+([^\t]+))?[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "support.class.signals.gdb" }
							}
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.help.gdb",
					"begin": "(?:^|\\G)[ \t]*(h(?:e(?:lp?)?)?)\\b[ \t]*",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"match": "\\b(alias(?:es?)?)\\b[ \t]*$",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"match": "\\b(b(?:r(?:e(?:a(?:k(?:p(?:o(?:i(?:n(?:ts?)?)?)?)?)?)?)?)?)?)\\b[ \t]*$",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"match": "\\b([^ \t]+)\\b[ \t]*$",
							"captures": { "1": { "name": "variable.other.variable.gdb" } }
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.apropos.gdb",
					"match": "(?:^|\\G)[ \t]*(apr(?:o(?:p(?:os?)?)?)?)\\b(?:[ \t]+(-v))?[ \t]+(.*)[ \t]*$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "support.function.option.gdb" },
						"3": { "name": "string.regexp.gdb" }
					}
				},
				{
					"name": "meta.command.save.gdb",
					"begin": "(?:^|\\G)[ \t]*\\b(save)[ \t]+",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"match": "\\b(t(?:r(?:a(?:c(?:e(?:p(?:o(?:i(?:n(?:ts?)?)?)?)?)?)?)?)?)?)\\b[ \t]+([^ \t]+)[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#location"} ] }
							}
						},
						{
							"match": "\\b(b(?:r(?:e(?:a(?:k(?:p(?:o(?:i(?:n(?:ts?)?)?)?)?)?)?)?)?)?)\\b[ \t]+([^ \t]+)[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "patterns": [ { "include": "#location"} ] }
							}
						},
						{
							"match": "\\b(g(?:d(?:b(?:-(?:i(?:n(?:d(?:ex?)?)?)?)?)?)?)?)(?:[ \t]+(-dwarf-5))?[ \t]+([^ \t]+)[ \t]*$",
							"captures": {
								"1": { "name": "support.function.option.gdb" },
								"2": { "name": "support.function.sub-option.gdb" },
								"3": { "patterns": [ { "include": "#location"} ] }
							}
						}
					],
					"end": "$"
				},
				{
					"name": "meta.command.quit.gdb",
					"match": "(?:^|\\G)[ \t]*\\b(q(?:uit?)?)[ \t]*$",
					"captures": { "1": { "name": "keyword.control.command.gdb" } }
				},
				{
					"name": "meta.command.cd.gdb",
					"match": "(?:^|\\G)[ \t]*\\b(cd)\\b[ \t]+(.*)$",
					"captures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "patterns" : [ { "include": "#location" } ] }
					}
				},
				{
					"name": "meta.command.frame.gdb",
					"begin": "(?:^|\\G)[ \t]*\\b(f(?:r(?:a(?:me?)?)?)?)\\b[ \t]*",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{
							"match": "\\b(l(?:e(?:v(?:el?)?)?)?[ \t]+)?\\b([0-9]+)[ \t]*$",
							"captures": {
								"1": { "name" : "support.function.option.gdb"},
								"2": { "patterns": [ { "include": "#numeric"} ] }
							}
						},
						{
							"match": "\\b(ad(?:d(?:r(?:e(?:ss?)?)?)?)?[ \t]+)\\b(0x\\h+)[ \t]*$",
							"captures": {
								"1": { "name" : "support.function.option.gdb"},
								"2": { "patterns": [ { "include": "#numeric"} ] }
							}
						},
						{
							"match": "\\b(f(?:u(?:n(?:c(?:t(?:i(?:on?)?)?)?)?)?)?[ \t]+)\\b(\\w+)[ \t]*$",
							"captures": {
								"1": { "name" : "support.function.option.gdb"},
								"2": { "patterns": [ { "include": "#location"} ] }
							}
						},
						{
							"match": "\\b(v(?:i(?:ew?)?)?)\\b[ \t]+\\b(0x\\h+)\\b(?:[ \t]+\\b(0x\\h+))?[ \t]*$",
							"captures": {
								"1": { "name" : "support.function.option.gdb"},
								"2": { "patterns": [ { "include": "#numeric"} ] },
								"3": { "patterns": [ { "include": "#numeric"} ] }
							}
						}
					],
					"end": "$"
				}

			]
		},
		"block": {
			"patterns": [
				{
					"name": "meta.block.commands.gdb",
					"begin": "(?:^|\\G)[ \t]*(comm(?:a(?:n(?:ds?)?)?)?)\\b(?:[ \t]+(.+))?[ \t]*$",
					"beginCaptures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "entity.name.tag.breakpoint.gdb" }
					},
					"end": "^[ \t]*(end)[ \t]*$",
					"patterns": [
						{
							"match": "^[ \t]*(silent)[ \t]*$",
							"captures": { "1": { "name": "keyword.control.command.gdb" } }
						},
						{ "include": "#expression" }
					],
					"endCaptures": { "1": { "name": "keyword.control.end.commands.gdb" } }
				},
				{
					"name": "meta.block.conditional.gdb",
					"begin": "^[ \t]*(if)\\b[ \t]+",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"patterns": [
						{ "include": "#expression" },
						{
							"match": "^[ \t]*(else)\\b[ \t]*$",
							"captures": { "1": { "name": "keyword.control.command.gdb" } }
						}
					],
					"end": "^[ \t]*(end)[ \t]*$",
					"endCaptures": { "1": { "name": "keyword.control.end.conditional.gdb" } }
				},
				{
					"name": "meta.block.while.gdb",
					"begin": "^[ \t]*(while)\\b[ \t]+(.*)[ \t]*$",
					"beginCaptures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "patterns": [ { "include": "#expression" } ] }
					},
					"patterns": [
						{ "include": "#expression" },
						{
							"match": "^[ \t]*(loop_(break|continue))[ \t]*$",
							"captures": { "1": { "name": "keyword.control.command.gdb" } }
						}
					],
					"end": "^[ \t]*(end)\\b[ \t]*$",
					"endCaptures": { "1": { "name": "keyword.control.end.while.gdb" } }
				},
				{
					"name": "meta.block.define.gdb",
					"begin": "^[ \t]*(define(?:-prefix)?)\\b[ \t]+([^[ \t]]+)[ \t]*$",
					"beginCaptures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "variable.other.variable.gdb" }
					},
					"patterns": [ { "include": "#expression" } ],
					"end": "^[ \t]*(end)[ \t]*$",
					"endCaptures": { "1": { "name": "keyword.control.end.define.gdb" } }
				},
				{
					"name": "meta.block.document.gdb",
					"begin": "^[ \t]*(doc(?:u(?:m(?:e(?:nt?)?)?)?)?)[ \t]+([^\\s]+)[ \t]*$",
					"beginCaptures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "variable.other.variable.gdb" }
					},
					"end": "^[ \t]*(end)[ \t]*$",
					"endCaptures": { "1": { "name": "keyword.control.end.document.gdb" } },
					"patterns": [
						{ 
							"match": ".+",
							"name" : "markup.italic.document.gdb"
						}
					]
				},
				{
					"name": "meta.block.hook.gdb",
					"begin": "^[ \t]*(define)\\b[ \t]+(hook-[^[ \t]]+)\\b[ \t]*$",
					"beginCaptures": {
						"1": { "name": "keyword.control.command.gdb" },
						"2": { "name": "variable.other.variable.gdb" }
					},
					"end": "^[ \t]*(end)[ \t]*$",
					"endCaptures": {
						"1": { "name": "keyword.control.end.hook.gdb" }
					},
					"patterns": [ { "include": "#expression" } ]
				},
				{
					"name": "meta.block.python.gdb",
					"begin": "^[ \t]*(py(?:thon)?)\\b[ \t]*$",
					"beginCaptures": { "1": { "name": "keyword.control.command.gdb" } },
					"end": "^[ \t]*(end)[ \t]*$",
					"endCaptures": { "1": { "name": "keyword.control.end.python.gdb" } },
					"patterns": [ { "include": "source.python" } ]
				}
			]
		},
		"convenience": {
			"patterns": [
				{
					"name": "entity.name.tag.convenience.gdb",
					"match": "\\B(\\$[^ \t=]+)\\b"
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.line.number-sign.gdb",
					"match": "^[ \t]*#.*$"
				},
				{
					"match": "[^[ \t]][^#]*(#.*)$",
					"captures": { "1": { "name": "invalid.comment.gdb" } }
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.gdb",
							"match": "\\\\."
						},
						{
							"name": "constant.character.escape.format.gdb",
							"match": "\\b(\\%\\d*\\.?\\d*(?:[cdeEfgGilopsuxXn%]?|(?:h[iu]|l[difu]]|LF|ll[idu])?)){1}"
						},
						{ "include": "#strings" },
						{ "include": "#operator" }
					]
				},
				{
					"name": "string.quoted.simple",
					"begin": "'",
					"end": "'"
				}
			]
		},
		"char": {
			"patterns": [
				{
					"name": "constant.numeric.character",
					"match": "'.'"
				}
			]
		},
		"on_off": {
			"patterns": [
				{
					"match": "(?<!-)\\b(on|off?)\\b(?!-)",
					"captures": { "1" : { "name": "markup.bold.argument.gdb" } }
				}
			]
		},
		"unlimited": {
			"patterns": [
				{
					"match": "(?<!-)\\b(u(?:n(?:l(?:i(?:m(?:i(?:t(?:ed?)?)?)?)?)?)?)?)\\b(?!-)",
					"captures": { "1" : { "name": "markup.bold.argument.gdb" } }
				}
			]
		},
		"auto" : {
			"patterns": [
				{
					"match": "(?<!-)\\b(a(?:u(?:to?)?)?)\\b(?!-)",
					"captures": { "1" : { "name": "markup.bold.argument.gdb" } }
				}
			]
		},
		"numeric": {
			"patterns": [
				{
					"name": "constant.numeric.base2.gdb",
					"match": "\\b(0b[01]+)\\b",
					"captures": { "1": { "name": "constant.character.escape.gdb" } }

				},
				{
					"name": "constant.numeric.base8.gdb",
					"match": "\\b(0[0-7]*)\\b",
					"captures": { "1": { "name": "constant.character.escape.gdb" } }
				},
				{
					"name": "constant.numeric.base16.gdb",
					"match": "\\b(0x\\h+)\\b",
					"captures": { "1": { "name": "constant.character.escape.gdb" } }

				},
				{
					"name": "constant.numeric.scientific.gdb",
					"match": "\\b((?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+)[eE][+-]\\d+)\\b"
				},
				{
					"name": "constant.numeric.float.gdb",
					"match": "\\b(\\d+\\.\\d*|\\d*\\.\\d+)\\b"
				},
				{
					"name": "constant.numeric.base10.gdb",
					"match": "\\b\\d+\\b"
				}
			]
		},
		"operator": {
			"patterns": [
				{
					"name": "meta.operator.shell.gdb",
					"begin": "^[ \t]*(!|she(?:ll?)?)",
					"beginCaptures": { "1": { "name": "support.class.shell.gdb" } },
					"patterns": [
						{
							"match": "\\b(\\|)",
							"captures": { "1": { "name": "support.class.pipe.gdb" } }
						},
						{
							"include": "#strings"
						}
					],
					"end":"$"
				}
			]
		},
		"location": {
			"patterns": [
				{
					"name": "meta.location.explicit.gdb",
					"comment": "https://sourceware.org/gdb/current/onlinedocs/gdb.html/Explicit-Locations.html",
					"patterns": [
						{
							"match": "\\B(-s(?:o(?:u(?:r(?:ce?)?)?)?)?)\\b",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"match": "\\B(-f(?:u(?:n(?:c(?:t(?:i(?:on?)?)?)?)?)?)?)\\b",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"match": "\\B(-li(?:ne?)?)\\b",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"match": "\\B(-la(?:b(?:el?)?)?)\\b",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						},
						{
							"match": "\\B(-q(?:u(?:a(?:l(?:i(?:f(?:i(?:ed?)?)?)?)?)?)?)?)\\b",
							"captures": { "1": { "name": "support.function.option.gdb" } }
						}
					]
				},
				{
					"name": "meta.location.linespec.gdb",
					"comment": "https://sourceware.org/gdb/current/onlinedocs/gdb.html/Linespec-Locations.html",
					"match": "([^ \t]+)\\b",
					"captures": { "1": { "name": "markup.underline.link.location.gdb" } }
				}
			]
		},
		"color_spec": {
			"patterns": [
				{
					"name": "meta.color-specifier.background.gdb",
					"begin": "\\b(b(?:a(?:c(?:k(?:g(?:r(?:o(?:u(?:nd?)?)?)?)?)?)?)?)?)\\b",
					"beginCaptures": { "1": { "name": "markup.bold.argument.gdb" } },
					"patterns": [ { "include": "#colors" } ],
					"end": "$"
				},
				{
					"name": "meta.color-specifier.foreground.gdb",
					"begin": "\\b(f(?:o(?:r(?:e(?:g(?:r(?:o(?:u(?:nd?)?)?)?)?)?)?)?)?)\\b",
					"beginCaptures": { "1": { "name": "markup.bold.argument.gdb" } },
					"patterns": [ { "include": "#colors" } ],
					"end": "$"
				},
				{
					"name": "meta.color-specifier.intensity.gdb",
					"begin": "\\b(i(?:n(?:t(?:e(?:n(?:s(?:i(?:ty?)?)?)?)?)?)?)?)\\b",
					"beginCaptures": { "1": { "name": "markup.bold.argument.gdb" } },
					"patterns": [ { "include": "#intensity" } ],
					"end": "$"
				}
			]
		},
		"intensity": {
			"patterns": [
				{
					"match": "\\b(n(?:o(?:r(?:m(?:al?)?)?)?)?)\\b",
					"captures": { "1": { "name": "markup.bold.intensity.normal.gdb" } }
				},
				{
					"match": "\\b(b(?:o(?:ld?)?)?)\\b",
					"captures": { "1": { "name": "markup.bold.intensity.bold.gdb" } }
				},
				{
					"match": "\\b(d(?:im?)?)\\b",
					"captures": { "1": { "name": "markup.bold.intensity.dim.gdb" } }
				}
			]
		},
		"colors": {
			"patterns": [
				{
					"match": "\\b(n(?:o(?:ne?)?)?)\\b",
					"captures": { "1": { "name": "markup.bold.color.none.gdb" } }
				},
				{
					"match": "\\b(bla(?:ck?)?)\\b",
					"captures": { "1": { "name": "markup.bold.color.black.gdb" } }
				},
				{
					"match": "\\b(r(?:ed?)?)\\b",
					"captures": { "1": { "name": "markup.bold.color.red.gdb" } }
				},
				{
					"match": "\\b(g(?:r(?:e(?:en?)?)?)?)\\b",
					"captures": { "1": { "name": "markup.bold.color.green.gdb" } }
				},
				{
					"match": "\\b(y(?:e(?:l(?:l(?:ow?)?)?)?)?)\\b",
					"captures": { "1": { "name": "markup.bold.color.yellow.gdb" } }
				},
				{
					"match": "\\b(m(?:a(?:g(?:e(?:n(?:ta?)?)?)?)?)?)\\b",
					"captures": { "1": { "name": "markup.bold.color.magenta.gdb" } }
				},
				{
					"match": "\\b(blue?)\\b",
					"captures": { "1": { "name": "markup.bold.color.blue.gdb" } }
				},
				{
					"match": "\\b(c(?:y(?:an?)?)?)\\b",
					"captures": { "1": { "name": "markup.bold.color.cyan.gdb" } }
				},
				{
					"match": "\\b(w(?:h(?:i(?:te?)?)?)?)\\b",
					"captures": { "1": { "name": "markup.bold.color.white.gdb" } }
				}
			]
		}
	}
}